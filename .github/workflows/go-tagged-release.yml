name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15 
      - name: Get Dependencies
        run: go get ./...

      - name: Build Darwin
        run:  CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o build/gfile-darwin-x86_64 main.go

      - name: Build Linux 
        run:  CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -ldflags '-w -extldflags "-static"' -o build/gfile-linux-x86_64 main.go

      - name: Build Windows
        run:  CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o build/gfile_Windows_x86_64.exe main.go

      - name: Test
        run: go test -short ./...
        
      - name: Make release dir
        run: mkdir release 
        
      - name: Archive using zip
        uses: NSCoder/archive-action@v1.0.0
        with:
          args: zip -qq release/gfile_Windows_x86_64.zip build/gfile_Windows_x86_64.exe

      - name: Archive using tar Linux
        uses: NSCoder/archive-action@v1.0.0
        with:
          args: tar -czvf release/gfile_Linux_x86_64.tar.gz build/gfile-linux-x86_64
      
      - name: Archive using tar Darwin
        uses: NSCoder/archive-action@v1.0.0
        with:
          args: tar -czvf release/gfile_Darwin_x86_64.tar.gz build/gfile-darwin-x86_64

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE
            README.md
            release/*
